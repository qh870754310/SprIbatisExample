<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sys.mapper.FactoryMapper">
	<resultMap type="com.sys.domain.Factory" id="factoryRM">
		<!-- 主键 -->
		<id property="id" column="FACTORY_ID"/>
		
		<!-- 一般属性 -->
		<result property="fullName" column="FULL_NAME"/>
		<result property="factoryName" column="FACTORY_NAME"/>
		<result property="contacts" column="CONTACTS"/>
		<result property="phone" column="PHONE"/>
		<result property="mobile" column="MOBILE"/>
		<result property="fax" column="FAX"/>
		<result property="cnote" column="CNOTE"/>
		<result property="inspector" column="INSPECTOR"/>
		<result property="orderNo" column="ORDER_NO"/>
		<result property="state" column="STATE"/>
		<result property="createBy" column="CREATE_BY"/>
		<result property="craeteDept" column="CREATE_DAPT"/>
		<result property="createTime" column="CREATE_TIME"/>
	</resultMap>
	
	<!-- 查询 -->
	<!-- 
		单独跳向生产厂家页面的时候取所有,
		带state参数跳向生产厂家列表的时候按条件取数据
	 -->
	<select id="find" parameterType="map" resultMap="factoryRM">
		select * from factory_c
		where 1=1
		<if test="state != null">
			add STATE=#{state}
		</if>
	</select>
	
	<!-- 
		新增 oracle jbdc驱动当这个值为null时，必须告诉它当前字段  
		默认值的类型jdbcType=VARCHAR（MyBatis定义）,Mysql不用写
	 -->
	 <insert id="insert" parameterType="com.sys.domain.Factory">
	 	insert into factory_c 
	 		(FACTORY_ID, FULL_NAME, FACTORY_NAME, CONTACTS, PHONE, MOBILE, FAX, CNOTE,
	 		INSPECTOR, ORDER_NO, STATE, CREATE_BY, CREATE_DEPT, CREATE_TIME)
	 	values
	 		(	#{id},
	 			#{fullName, jdbcType=VARCHAR},
	 			#{factoryName, jdbcType=VARCHAR},  
        		#{contacts, jdbcType=VARCHAR},  
        		#{phone, jdbcType=VARCHAR},  
        		#{mobile, jdbcType=VARCHAR},  
        		#{fax, jdbcType=VARCHAR},  
        		#{cnote, jdbcType=VARCHAR},  
       	 		#{inspector, jdbcType=VARCHAR},  
        		#{orderNo, jdbcType=INTEGER}, 
        		#{state, jdbcType=VARCHAR}, 
        		#{createBy, jdbcType=VARCHAR},  
       			#{creatDept, jdbcType=VARCHAR},  
        		#{creatTime, jdbcType=TIMESTAMP}
	 		)
	 </insert>
	 
	 <!-- 
	 	我们的添加模块并没有添加动态SQL语句(判定各种条件等)，我们在写insert的时候我们一般都是所有字段新增，
	 	所以我们没有用动态SQL语句。但是“修改”并不是所有字段都修改的，所以我们的修改配置语句需要使用动态SQL语句
	  -->
	  <!-- 修改语句 -->
	  <update id="update" parameterType="com.sys.domain.Factory">
	  	update factory_c 
	  	<set>
	  		<if test="fullName != null">FULL_NAME=#{fullName, jdbcType=VARCHAR},</if>
	  		<if test="factoryName != null">FACTORY_NAME=#{factoryName, jdbcType=VARCHAR},</if>
	  		<if test="contacts != null">CONTACTS=#{contacts, jdbcType=VARCHAR},</if>
	  		<if test="phone != null">PHONE=#{phone, jdbcType=VARCHAR},</if>
	  		<if test="mobile != null">MOBILE=#{mobile, jdbcType=VARCHAR},</if>
	  		<if test="fax != null">FAX=#{fax, jdbcType=VARCHAR},</if>
	  		<if test="cnote != null">CNOTE=#{cnote, jdbcType=VARCHAR},</if>
	  		<if test="inspector != null">INSPECTOR=#{inspector, jdbcType=VARCHAR},</if>
	  		<if test="orderNo != null">ORDER_NO=#{orderNo, jdbcType=INTEGER},</if>
	  		<if test="state != null">STATE=#{state, jdbcType=VARCHAR},</if>
	  	</set>
	  	where FACTORY_ID = #{id}
	  </update>
	  
	  <!-- 查询一个 -->
	  <select id="get" parameterType="string" resultMap="factoryRM">
	  	select * from factory_c
	  	where factory_id = #{id}
	  </select>
	  
	  <!-- 删除一条 -->
	  <delete id="deleteById" parameterType="string">
	  	delete from factory_c
	  	where FACTORY_ID = #{id}
	  </delete>
	  
	  <!-- 删除多条（一维字符串数组的形式） -->
	  <delete id="delete" parameterType="string">
	  	delete from factory_c
	  	where FACTORY_ID in
	  	<foreach collection="array" item="id" open="(" close=")" separator=",">
	  		#{id}
	  	</foreach>
	  </delete>
	  
	  <!-- 修改状态 -->
	  <update id="updateState" parameterType="map">
	  	update factory_c set state=#{state}
	  	where FACTORY_ID in
	  	<foreach collection="ids" item="id" open="(" close=")" separator=",">
	  		#{id}
	  	</foreach>
	  </update>
</mapper>